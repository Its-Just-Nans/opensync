// Copyright (c) 2015, Plume Design Inc. All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//    1. Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3. Neither the name of the Plume Design Inc. nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package otbr;

// Thread Network Discovery result
message ThreadNetwork {
  fixed64 ext_addr = 1;        // IEEE 802.15.4 Extended Address
  fixed64 ext_pan_id = 2;      // Thread Extended PAN ID
  uint32 pan_id = 3;           // IEEE 802.15.4 PAN ID
  string name = 4;             // Thread Network Name
  bytes steering_data = 5;     // Steering Data
  uint32 channel = 6;          // IEEE 802.15.4 Channel
  int32 rssi = 7;              // RSSI (dBm)
  uint32 lqi = 8;              // LQI
  uint32 joiner_udp_port = 9;  // Joiner UDP Port
  uint32 version = 10;         // Version
  bool native = 11;            // Native Commissioner flag
  bool discover = 12;          // Result from MLE Discovery
}

// Thread Network Discovery Results
message ThreadNetworkScan {
  repeated ThreadNetwork networks = 1;
}
