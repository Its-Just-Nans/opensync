// Copyright (c) 2015, Plume Design Inc. All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//    1. Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3. Neither the name of the Plume Design Inc. nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package upnp.portmap;

enum Protocols {
  PROTOCOL_UNSPECIFIED = 0;
  TCP = 1;
  UDP = 2;
}

enum CaptureSource {
  CAPTURE_SOURCE_UNSPECIFIED = 0;
  IGD_POLL = 1;            // This is a snapshot
  OVSDB_STATIC = 2;        // This is a snapshot
  PKT_INSPECTION_ADD = 3;  // This is an addition request
  PKT_INSPECTION_DEL = 4;  // This is a deletion request
}

message Portmap {
  CaptureSource source = 1;
  uint64 captured_at_ms = 2;  // Time of capture on wire or from IGD request
  bytes device_id = 3;     // MAC address (for wire capture only, best effort matching int_client for snapshot)
  Protocols protocol = 4;
  uint32 ext_port = 5;

  uint32 int_client = 6;   // IP address
  uint32 int_port = 7;
  string description = 8;
  string enabled = 9;
  int32 duration = 10;
}

message ObservationPoint {
  string node_id = 1;
  string location_id = 2;
}

message Report {
  uint64 reported_at_ms = 2;
  ObservationPoint observation_point = 1;
  repeated Portmap portmaps = 3;
}
