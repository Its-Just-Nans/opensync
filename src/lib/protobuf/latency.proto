// Copyright (c) 2015, Plume Design Inc. All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//    1. Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3. Neither the name of the Plume Design Inc. nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto2";

package latency;

enum DscpType {
    PRESENT = 0;
    MISSING = 1; // was requested, but unavailable, eg. not an IP
}

message Sample {
    optional uint64 timestamp_ms    = 1;
    optional uint32 min_ms          = 2;
    optional uint32 max_ms          = 3;
    optional uint32 avg_ms          = 4;
    optional uint32 last_ms         = 5;
    optional uint32 num_pkts        = 6;
}

message Host {
    // the following 5 fields are keying
    optional string   if_name       = 1;
    optional bytes    mac_address   = 2;
    optional DscpType dscp_type     = 3; // skipped means it was not requested
    optional uint32   dscp_value    = 4; // required when dscp_type == VALUE
    optional string   if_role       = 7;

    required uint64   timestamp_ms  = 5;
    repeated Sample   samples       = 6;
}

message Report {
    required string   node_id = 1;
    repeated Host     hosts   = 2;
}
